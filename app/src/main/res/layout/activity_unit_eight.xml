<?xml version="1.0" encoding="utf-8"?>
<ScrollView
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    >
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/main"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".UnitEight.UnitEightActivity">
    <TextView
        android:id="@+id/question_swift_language"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Introduction to Swift language"
        android:textSize="18sp"
        android:padding="16dp"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <TextView
        android:id="@+id/answer_swift_language"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Swift is a powerful and intuitive programming language developed by Apple for iOS, macOS, watchOS, and tvOS development. It is known for its modern syntax, safety features, and performance. Swift includes features like optional types, type inference, and memory safety, making it a robust choice for building applications."
        android:textSize="16sp"
        android:padding="16dp"
        app:layout_constraintTop_toBottomOf="@id/question_swift_language"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <!-- Question and Answer about Views and the view hierarchy -->
    <TextView
        android:id="@+id/question_views_hierarchy"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Views and the view hierarchy"
        android:textSize="18sp"
        android:padding="16dp"
        app:layout_constraintTop_toBottomOf="@id/answer_swift_language"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <TextView
        android:id="@+id/answer_views_hierarchy"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="In iOS development, views are the building blocks of the user interface. The view hierarchy represents the structure and organization of these views. Each view can contain other views, creating a hierarchical structure. The root view is typically the main container view, with child views layered on top or arranged in a specific layout."
        android:textSize="16sp"
        android:padding="16dp"
        app:layout_constraintTop_toBottomOf="@id/question_views_hierarchy"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <!-- Question and Answer about Storyboard and view controllers -->
    <TextView
        android:id="@+id/question_storyboard_view_controllers"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Storyboard and view controllers"
        android:textSize="18sp"
        android:padding="16dp"
        app:layout_constraintTop_toBottomOf="@id/answer_views_hierarchy"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <TextView
        android:id="@+id/answer_storyboard_view_controllers"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Storyboards are a visual representation of the application's user interface, where you can design and layout the screens (view controllers) and their transitions. View controllers manage the content and interactions of a view or a group of views. They handle user input, manage the view hierarchy, and update the user interface accordingly."
        android:textSize="16sp"
        android:padding="16dp"
        app:layout_constraintTop_toBottomOf="@id/question_storyboard_view_controllers"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <!-- Question and Answer about working with widgets and their attributes -->
    <TextView
        android:id="@+id/question_widgets_attributes"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Working with widgets and their attributes"
        android:textSize="18sp"
        android:padding="16dp"
        app:layout_constraintTop_toBottomOf="@id/answer_storyboard_view_controllers"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <TextView
        android:id="@+id/answer_widgets_attributes"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Widgets (UI elements) in iOS include buttons, labels, text fields, and more. Attributes of widgets such as size, color, and text can be set programmatically or through the Interface Builder. You interact with widgets by configuring their properties, adding actions and outlets, and customizing their appearance to match the design of the application."
        android:textSize="16sp"
        android:padding="16dp"
        app:layout_constraintTop_toBottomOf="@id/question_widgets_attributes"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <!-- Question and Answer about creating a simple iOS application -->
    <TextView
        android:id="@+id/question_simple_ios_app"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Creating a simple iOS application"
        android:textSize="18sp"
        android:padding="16dp"
        app:layout_constraintTop_toBottomOf="@id/answer_widgets_attributes"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <TextView
        android:id="@+id/answer_simple_ios_app"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="To create a simple iOS application:\n\n1. Open Xcode and create a new project.\n2. Select 'App' under the iOS section and click 'Next'.\n3. Enter a project name and select Swift as the programming language.\n4. Design the user interface using the storyboard by dragging and dropping UI elements.\n5. Create view controllers to manage each screen.\n6. Connect UI elements to code using IBOutlet and IBAction.\n7. Write the logic in the view controllers to handle user interactions.\n8. Build and run the application on the simulator to test it."
    android:textSize="16sp"
    android:padding="16dp"
    app:layout_constraintTop_toBottomOf="@id/question_simple_ios_app"
    app:layout_constraintStart_toStartOf="parent"
    app:layout_constraintEnd_toEndOf="parent" />
</androidx.constraintlayout.widget.ConstraintLayout>
</ScrollView>