<?xml version="1.0" encoding="utf-8"?>



<ScrollView
xmlns:android="http://schemas.android.com/apk/res/android"
android:layout_width="match_parent"
android:layout_height="match_parent">
<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".UnitTwo.unitTwoP2Fragment">
<LinearLayout
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical"
    android:padding="16dp">

    <!-- Title -->
    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Tutorial: Understanding AndroidManifest.xml"
        android:textSize="25sp"
        android:textStyle="bold"
        android:layout_marginBottom="16dp" />

    <!-- What is Manifest File -->
    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="What is AndroidManifest.xml?"
        android:textSize="20sp"
        android:textStyle="bold"
        android:layout_marginBottom="8dp" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="The AndroidManifest.xml file is a crucial part of an Android application. It provides essential information about the application to the Android system, such as its components, permissions required, hardware requirements, and more."
        android:textSize="16sp"
        android:lineSpacingExtra="4dp"
        android:layout_marginBottom="16dp" />

    <!-- Adding Activity to Manifest -->
    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Adding Activity to Manifest"
        android:textSize="20sp"
        android:textStyle="bold"
        android:layout_marginBottom="8dp" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="To add an activity to AndroidManifest.xml, you need to declare it within the &lt;application&gt; element. Each activity is defined with its name attribute specifying the class and other optional attributes like intent filters."
        android:textSize="16sp"
        android:lineSpacingExtra="4dp"
        android:layout_marginBottom="16dp" />

    <!-- Example: Adding MainActivity -->
    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Example: Adding MainActivity"
        android:textSize="20sp"
        android:textStyle="bold"
        android:layout_marginBottom="8dp" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Here's how you add MainActivity to AndroidManifest.xml:"
        android:textSize="16sp"
        android:lineSpacingExtra="4dp"
        android:layout_marginBottom="8dp" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="&lt;activity android:name=&quot;.MainActivity&quot;&gt;"
    android:textSize="16sp"
    android:textColor="#615F5F"
    android:layout_marginBottom="8dp" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="   &lt;intent-filter&gt;"
        android:textSize="16sp"
        android:textColor="#615F5F"
        android:layout_marginBottom="8dp" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="       &lt;action android:name=&quot;android.intent.action.MAIN&quot;/&gt;"
    android:textSize="16sp"
    android:textColor="#615F5F"
    android:layout_marginBottom="8dp" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="       &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot;/&gt;"
    android:textSize="16sp"
    android:textColor="#615F5F"
    android:layout_marginBottom="8dp" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="   &lt;/intent-filter&gt;"
        android:textSize="16sp"
        android:textColor="#615F5F"
        android:layout_marginBottom="8dp" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="   &lt;/activity&gt;"
        android:textSize="16sp"
        android:textColor="#615F5F"
        android:layout_marginBottom="16dp" />



    <!-- Title -->
    <!-- Title -->
    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Tutorial: Understanding Intent-Filter for Activities"
        android:textSize="25sp"
        android:textStyle="bold"
        android:layout_marginBottom="16dp" />

    <!-- What is Intent-Filter -->
    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="What is Intent-Filter?"
        android:textSize="20sp"
        android:textStyle="bold"
        android:layout_marginBottom="8dp" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="An intent-filter is a sub-element of the &lt;activity&gt; tag in the AndroidManifest.xml file. It specifies the types of intents that an activity, service, or broadcast receiver can respond to. It acts as a filter to declare what kinds of intents your component can handle."
        android:textSize="16sp"
        android:lineSpacingExtra="4dp"
        android:layout_marginBottom="16dp" />

    <!-- Role of Intent-Filter -->
    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Role of Intent-Filter for Activities"
        android:textSize="20sp"
        android:textStyle="bold"
        android:layout_marginBottom="8dp" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="The intent-filter for an activity defines the kinds of intents that the activity can handle. It specifies the actions and categories of intents that the activity is capable of responding to. This is particularly important for activities that serve as entry points into your application, such as those that respond to ACTION_MAIN and CATEGORY_LAUNCHER."
        android:textSize="16sp"
        android:lineSpacingExtra="4dp"
        android:layout_marginBottom="16dp" />

    <!-- Example: Adding Intent-Filter to MainActivity -->
    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Example: Adding Intent-Filter to MainActivity"
        android:textSize="20sp"
        android:textStyle="bold"
        android:layout_marginBottom="8dp" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Heres how you can add an intent-filter to MainActivity in AndroidManifest.xml:"
        android:textSize="16sp"
        android:lineSpacingExtra="4dp"
        android:layout_marginBottom="8dp" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="&lt;activity android:name=&quot;.MainActivity&quot;&gt;"
        android:textSize="16sp"
        android:textColor="#615F5F"
        android:layout_marginBottom="8dp" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="   &lt;intent-filter&gt;"
        android:textSize="16sp"
        android:textColor="#615F5F"
        android:layout_marginBottom="8dp" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="       &lt;action android:name=&quot;android.intent.action.MAIN&quot; &gt;"
        android:textSize="16sp"
        android:textColor="#615F5F"
        android:layout_marginBottom="8dp" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="       &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot;&gt;"
        android:textSize="16sp"
        android:textColor="#615F5F"
        android:layout_marginBottom="8dp" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="   &lt;intent-filter&gt;"
        android:textSize="16sp"
        android:textColor="#615F5F"
        android:layout_marginBottom="8dp" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="&lt;activity&gt;"
        android:textSize="16sp"
        android:textColor="#615F5F"
        android:layout_marginBottom="16dp" />




        <!-- Title -->
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Tutorial: Creating String Resources"
            android:textSize="25sp"
            android:textStyle="bold"
            android:layout_marginBottom="16dp" />

        <!-- What are String Resources -->
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="What are String Resources?"
            android:textSize="20sp"
            android:textStyle="bold"
            android:layout_marginBottom="8dp" />

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="String resources are XML files located in the res/values/ directory of your Android project. They allow you to define strings that can be reused throughout your application, ensuring consistency and ease of localization."
            android:textSize="16sp"
            android:lineSpacingExtra="4dp"
            android:layout_marginBottom="16dp" />

        <!-- How to Create String Resources -->
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="How to Create String Resources"
            android:textSize="20sp"
            android:textStyle="bold"
            android:layout_marginBottom="8dp" />

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="To create string resources, follow these steps:"
            android:textSize="16sp"
            android:lineSpacingExtra="4dp"
            android:layout_marginBottom="16dp" />

        <!-- Step 1: Navigate to strings.xml -->
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Step 1: Navigate to strings.xml"
            android:textSize="18sp"
            android:textStyle="bold"
            android:layout_marginBottom="8dp" />

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Open res/values/strings.xml file in your Android project."
            android:textSize="16sp"
            android:lineSpacingExtra="4dp"
            android:layout_marginBottom="16dp" />

        <!-- Step 2: Add String Resource -->
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Step 2: Add String Resource"
            android:textSize="18sp"
            android:textStyle="bold"
            android:layout_marginBottom="8dp" />

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Inside strings.xml, add a new &lt;string&gt; element with a name attribute as follows:"
            android:textSize="16sp"
            android:lineSpacingExtra="4dp"
            android:layout_marginBottom="8dp" />

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="&lt;string name=&quot;hello_message&quot;&gt;Hello, World!&lt;/string&gt;"
    android:textSize="16sp"
    android:textColor="#615F5F"
    android:layout_marginBottom="16dp" />

    <!-- Step 3: Use String Resource -->
    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Step 3: Use String Resource"
        android:textSize="18sp"
        android:textStyle="bold"
        android:layout_marginBottom="8dp" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="In your layout XML or Java code, reference the string resource using @string/ prefix:"
        android:textSize="16sp"
        android:lineSpacingExtra="4dp"
        android:layout_marginBottom="8dp" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Hello World"
        android:textSize="16sp"
        android:textColor="#615F5F"
        android:layout_marginBottom="16dp" />
</LinearLayout>
</FrameLayout>
</ScrollView>